###### Modded by Sander de Wit ######
###### SYSTEM MANAGEMENT ######

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0

# Controls whether core dumps will append the PID to the core filename
# Useful for debugging multi-threaded applciations
kernel.core_uses_pid = 1

# Enable ExecShield protection
# kernel.exec-shield = 1 # not installed ?
kernel.randomize_va_space = 1

# Allow for more PIDs
kernel.pid_max = 65536

###### IMPROVE SYSTEM MEMORY MANAGEMENT ######

# 2 * size of RAM in the default system page
kernel.shmall = 2097152

# size of RAM in GB
kernel.shmmax = 2147483648

# 256 * size of RAM in GB
kernel.shmmni = 4096

# Increase size of file handles and inode cache
fs.file-max = 2097152

# Do less swapping
vm.swappiness = 10
vm.vfs_cache_pressure = 50
vm.dirty_ratio = 60
vm.dirty_background_ratio = 2

###### GENERAL IPv4 SECURITY OPTIONS ######

# Send redirects, if router, but this is just a client
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Do not accept packets with SRR option
net.ipv4.conf.all.accept_source_route = 0

# Do not accept redirects
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0

# Log packets with impossible addresses to the kernel log
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# Ignore all ICMP ECHO and TIMESTAMP request sent through broadcast
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Disable IP packet forwarding
net.ipv4.ip_forward = 0

# Controls source route verification
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.rp_filter=1

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Controls the use of TCP syncookies
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_max_syn_backlog = 2048

# Number of SYNACKs for passive TCP connection
net.ipv4.tcp_synack_retries = 2

# Allowed local port range
net.ipv4.ip_local_port_range = 2000 65535

# Protect against TCP time-wait
net.ipv4.tcp_rfc1337 = 1

# Decrease the time default value for tcp_fin_timeout connection
net.ipv4.tcp_fin_timeout = 15

# Decrease the time default value for connections to keep alive
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_keepalive_intvl = 15

###### GENERAL IPv6 SECURITY OPTIONS ######

# Number of Router Solicitations to send until assuming no routers are present
net.ipv6.conf.default.router_solicitations = 0

# Do not accept Router Preference in RA
net.ipv6.conf.default.accept_ra_rtr_pref = 0

# Learn prefix information in router advertisement
net.ipv6.conf.default.accept_ra_pinfo = 0

# Setting controls whether the system will accept Hop limit settings
net.ipv6.conf.default.accept_ra_defrtr = 0

# Router advertisement assigns global unicast address
# net.ipv6.conf.default.autoconfig = 0

# How many neighbour solicitations to send out per address
net.ipv6.conf.default.dad_transmits = 0

# How many global unicast IPv6 addresses can be assigned per interface
net.ipv6.conf.default.max_addresses = 1

###### TUNING NETWORK PERFORMANCE ######

# Default Socket Receive Buffer
net.core.rmem_default = 31457280

# Maximum Socket reveive Buffer
net.core.rmem_max = 12582912

# Default Socket Send Buffer
net.core.wmem_default = 31457280

# Maximum Socket Send Buffer
net.core.wmem_max = 12582912

# Increase number of incoming connections
# net.core.somazconn = 4096

# Increase number of incoming connections backlog
net.core.netdev_max_backlog = 65536

# Increase the maximum amount of option memory buffers
net.core.optmem_max = 25165824

# Increase the maximum total buffer-space allocatable
# This is measured in units of pages (4096 bytes)
net.ipv4.tcp_mem = 65536 131072 262144
net.ipv4.udp_mem = 65536 131072 262144

# Increase the read-buffer space allocatable
net.ipv4.tcp_rmem = 8192 87380 16777216
net.ipv4.udp_rmem_min = 16384

# Increase the write-buffer space allocatable
net.ipv4.tcp_wmem = 8192 87380 16777216
net.ipv4.udp_wmem_min = 16384

# Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks
net.ipv4.tcp_max_tw_buckets = 1440000
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1

